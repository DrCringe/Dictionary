plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'idea'
}

group = 'com.polytech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'me.xdrop:fuzzywuzzy:1.2.0'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	def junitJupiterVersion = '5.4.2'
	testCompile "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
	testCompile "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
	testCompile 'org.testcontainers:testcontainers:1.14.0'
	testCompile 'org.testcontainers:junit-jupiter:1.14.0'
	testCompile 'org.testcontainers:postgresql:1.14.0'
    testCompile 'org.apache.httpcomponents:httpclient:4.5.12'

	compileOnly('org.hibernate:hibernate-jpamodelgen:5.4.12.Final')
	annotationProcessor('org.hibernate:hibernate-jpamodelgen:5.4.12.Final')
}

test {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file('src/generated/java')
}

sourceSets {
	generated {
		java {
			srcDirs = ['src/generated/java']
		}
	}
}

idea {
	module {
		generatedSourceDirs += file('src/generated/java')
	}
}
